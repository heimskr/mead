// 1: LtR
E1 := E2 E1';

E1' := "::" ident E1'
     | ;

// 2: LtR
E2 := E3 E2'
    | Type "(" args ")" E2';

E2' := "++" E2'
     | "--" E2'
     | "(" args ")" E2' // function call
     | "[" E1 "]" E2'
     | "." ident E2'
     | "." "*" E2'
     | "." "&" E2'
     | ;

// 3: RtL
E3 := "++" E3
    | "--" E3
    | "+" E3
    | "-" E3
    | "!" E3
    | "~" E3
    | cast "<" Type ">" "(" E1 ")"
    | "sizeof" "(" E1 ")"
    | "new" Type
    | "new" Type "(" args ")"
    | "new" Type "[" E1 "]"
    | "delete" E3
    | E4;

// 4: LtR
E4 := E5 E4';

E4' := "*" E5 E4'
     | "/" E5 E4'
     | "%" E5 E4'
     | ;

// 5: LtR
E5 := E6 E5';

E5' := "+" E6 E5'
     | "-" E6 E5'
     | ;

// 6: LtR
E6 := E7 E6';

E6' := ">>" E7 E6'
     | "<<" E7 E6'
     | ;

// 7: LtR
E7 := E7 E8';

E7' := "<=>" E8 E7'
     | ;

// 8: LtR
E8 := E9 E8';

E8' := "<"  E9 E8'
     | "<=" E9 E8'
     | ">"  E9 E8'
     | ">=" E9 E8'
     | ;

// 9: LtR
E9 := E10 E9';

E9' := "==" E10 E9'
     | "!=" E10 E9'
     | ;

// 10: LtR
E10 := E11 E10';

E10' := "&" E11 E10'
      | ;

// 11: LtR
E11 := E12 E11';

E11' := "^" E12 E11'
      | ;

// 12: LtR
E12 := E13 E12';

E12' := "|" E13 E12'
      | ;

// 13: LtR
E13 := E14 E13';

E13' := "&&" E14 E13'
      | ;

// 14: LtR
E14 := E15 E14';

E14' := "||" E15 E14'
      | ;

// 15: RtL
E15 := "if" E1 Block "else" Block
     | E16 "=" E15
     | E16 "+=" E15
     | E16 "-=" E15
     | E16 "*=" E15
     | E16 "/=" E15
     | E16 "%=" E15
     | E16 "<<=" E15
     | E16 ">>=" E15
     | E16 "&=" E15
     | E16 "^=" E15
     | E16 "|=" E15
     | E16 "&&=" E15
     | E16 "||=" E15
     | E16
     ;

// 16: LtR
E16 := E17 E16';

E16' := "," E17 E16'
      | ;

// 17: LtR
E17 := "(" E1 ")"
     | Literal
     | ident
     ;
